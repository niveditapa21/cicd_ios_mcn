name: GHCR - Install SD-Core 5G

on:
  workflow_dispatch:
    inputs:
      server_ip:
        description: 'The server IP address'
        required: true
        default: '54.92.193.42'
      branch_name:
        description: 'The branch name to use'
        required: true
        default: 'main'

jobs:
  install:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set Up Variables
        run: |
          echo "SERVER_IP=${{ github.event.inputs.server_ip }}" >> $GITHUB_ENV
          echo "BRANCH_NAME=${{ github.event.inputs.branch_name }}" >> $GITHUB_ENV

      - name: Remove Conflicting Packages
        run: |
          sudo apt-get remove --purge -y containerd
          sudo apt-get autoremove -y
          sudo apt-mark unhold containerd || true
          sudo apt-get update -y

      - name: Install Prerequisites
        run: |
          if [ ! -f /usr/share/keyrings/docker-archive-keyring.gpg ]; then
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
          else
            echo "Docker keyring already exists. Skipping creation."
          fi
          sudo chmod a+r /usr/share/keyrings/docker-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update -y
          sudo apt-get install -y containerd.io
          sudo apt-get install -y git curl make net-tools pipx python3-venv sshpass netplan.io iptables jq sed
          pipx install --include-deps ansible || true
          pipx ensurepath
          make --version

      - name: Debug PATH and Installed Tools
        run: |
          echo "Current PATH: $PATH"
          which sed || echo "sed not found"
          ls -l /usr/bin/sed || echo "/usr/bin/sed not found"

      - name: Set up Docker authentication for GHCR
        run: |
          echo "${{ secrets.GHCRPASS }}" | sudo docker login ghcr.io -u "${{ secrets.GHCRUSER }}" --password-stdin

      - name: Install Kubernetes
        shell: bash 
        run: |
          make -f custom-makefile-name aether-k8s-install
          

      - name: Install SD-Core
        run: |
          make aether-5gc-install
          kubectl get pods -n omec

  test:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Test Kubernetes Pods
        run: |
          echo "Checking if pods are deployed..."
          kubectl get pods -n omec
          if [[ $(kubectl get pods -n omec | grep Running | wc -l) -gt 0 ]]; then
            echo "Deployment successful: Pods are running."
          else
            echo "Deployment failed: No running pods found."
            exit 1
          fi
