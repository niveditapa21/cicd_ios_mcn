name: GHCR - Install SD-Core 5G

on:
  workflow_dispatch:
    inputs:
      server_ip:
        description: 'The server IP address'
        required: true
        default: '10.176.27.143'
      branch_name:
        description: 'The branch name to use'
        required: true
        default: 'main'

jobs:
  install:
    runs-on: [self-hosted]  # Using our own self hosted runner

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set Up Variables
        run: |
          echo "SERVER_IP=${{ github.event.inputs.server_ip }}" >> $GITHUB_ENV
          echo "BRANCH_NAME=${{ github.event.inputs.branch_name }}" >> $GITHUB_ENV
      - name: Remove Conflicting Packages
        run: |
          sudo apt-get remove --purge -y containerd
          sudo apt-get autoremove -y
          sudo apt-mark unhold containerd || true  # Ensure no held packages
          sudo apt-get update -y
      - name: Install Prerequisites
        run: |
          if [ ! -f /usr/share/keyrings/docker-archive-keyring.gpg ]; then
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
          else
            echo "Docker keyring already exists. Skipping creation."
          fi
          sudo chmod a+r /usr/share/keyrings/docker-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update -y
          sudo apt-get install -y containerd.io
          sudo apt-get install -y git curl make net-tools pipx python3-venv sshpass netplan.io iptables jq sed
          pipx install --include-deps ansible || true  # Ignore if already installed
          pipx ensurepath
          make --version  # Verify make installation
          echo "PATH=$PATH:/usr/bin:$HOME/.local/bin" >> $GITHUB_ENV
          source $GITHUB_ENV  # Ensure new PATH is applied
      - name: Debug PATH and Installed Tools
        run: |
          echo "Current PATH: $PATH"
          which sed || echo "sed not found"
          ls -l /usr/bin/sed || echo "/usr/bin/sed not found"
      - name: Update Configuration Files
        shell: bash
        run: |
          # Replace content of line 2 with the new node1 IP and credentials
          #sed -i '2s/.*/node1 ansible_host=localhost ansible_user=ios5gn ansible_password=ios5gn ansible_sudo_pass=ios5gn/' hosts.ini
          ##sed -i '3s/^/#/' hosts.ini
          #sed -i '10s/^/#/' hosts.ini
          #sed -i '11s/^/#/' hosts.ini
          # Verify the updated hosts.ini content
          echo "Updated hosts.ini content:"
          cat hosts.ini
      - name: Set up Docker authentication for GHCR
        run: |
          sudo docker login ghcr.io -u "${{ secrets.GHCRUSER }}" --password-stdin <<< "${{ secrets.GHCRPASS }}"
          
      - name: Install Kubernetes
        shell: bash 
        run: |
          make aether-k8s-install  # Running from repo home
        
      - name: Install SD-Core
        run: |
          make aether-5gc-install  # Running from repo home
          kubectl get pods -n omec
    
